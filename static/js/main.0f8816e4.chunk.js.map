{"version":3,"sources":["ObjectCreator.js","StyledElements.js","Register.js","Login.js","GoogleSignIn.js","LoginPage.js","AddTask.js","Task.js","DayTasks.js","Schedule.js","ToDoList.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["makeTasksObject","rawTasks","tasks","Map","rawTask","task","time","remainingTime","remaining_time","title","desc","description","priority","startDate","start_date","dueDate","due_date","taskId","task_id","has","get","push","set","theme","main","second","fontFamily","Button","styled","button","props","Button2","Input","input","GlobalStyle","createGlobalStyle","Register","className","setLogin","setToken","setTaskState","useState","username","setUsername","password","setPassword","type","onClick","onChange","e","target","value","fetch","method","headers","body","JSON","stringify","then","res","json","data","token","Login","status","alert","GoogleSignIn","onSignIn","googleUser","id_token","getAuthResponse","useEffect","window","gapi","signin2","render","id","LoginPage","setTokenState","setTasksState","showLogin","setShowLogin","getFormattedDate","date","getFullYear","getMonth","getDate","AddTask","roundTime","Date","setStartDate","setDueDate","name","setName","totalTime","setTotalTime","setDescription","prio","setPrio","parseInt","selected","timestamp","now","formattedStartDate","formattedDueDate","Math","ceil","Task","timeToComplete","DayTasks","completedState","setCompletedState","map","convertStringToDate","substring","dayDiff","endDate","date1","date2","abs","generateSchedule","size","minDate","maxDate","buckets","taskItems","tasksPerBucket","bucketsPerTask","dateTasks","availableBuckets","undefined","i","bucket","setDate","round","newTask","totalBuckets","sort","first","entries","length","j","splice","newSchedule","schedule","copy","taskTimes","newDateTasks","compressSchedule","Schedule","setSchedule","scheduleDates","forEach","ToDoList","completedTasks","setTasks","setCompletedTasks","taskDates","Main","minTime","reminders","setReminders","App","document","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f8816e4.chunk.js","sourcesContent":["function makeTasksObject(rawTasks) {\n  /**\n   * Given an array of tasks, make a tasks object for setState.\n   */\n  let tasks = new Map();\n  for (let rawTask of rawTasks) {\n    let task = {\n      time: rawTask.time,\n      remainingTime: rawTask.remaining_time,\n      title: rawTask.title,\n      desc: rawTask.description,\n      priority: rawTask.priority,\n      startDate: rawTask.start_date,\n      dueDate: rawTask.due_date,\n      taskId: rawTask.task_id\n    };\n\n    if (tasks.has(rawTask.due_date)) {\n      tasks.get(rawTask.due_date).push(task);\n    }\n    else {\n      tasks.set(rawTask.due_date, [task])\n    }\n  }\n  return tasks;\n}\n\nexport {makeTasksObject};","import styled, {createGlobalStyle} from 'styled-components';\n// Arvo or Merriweather\nconst theme = {\n    main: '#00a2ff',\n    second: '#69c8ff',\n    fontFamily: 'Merriweather',\n};\n\nconst Button = styled.button`\n    background-color: ${props => props.theme.main};\n    color: #fff;\n    border: 1px solid transparent;\n    margin-right: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 35px;\n    font-weight: bold;\n    font-size: 12px;\n    padding: 6px 12px 7px 12px;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n    font-family: ${props => props.theme.fontFamily};\n`;\n\nconst Button2 = styled.button`\n    background-color: ${props => props.theme.second};\n    color: #fff;\n    border: 1px solid transparent;\n    margin-right: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 35px;\n    font-weight: bold;\n    font-size: 12px;\n    padding: 6px 12px 7px 12px;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n    font-family: ${props => props.theme.fontFamily};\n`;\n\nconst Input = styled.input`\n    border: hidden;\n    background-color: #f2f2f2;\n    border-radius: 5px;\n    height: 25px;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        font-family: ${props => props.theme.fontFamily};\n    }\n`;\n\nexport {Button, Button2, Input, GlobalStyle, theme};","import React, {useState} from 'react';\nimport {makeTasksObject} from './ObjectCreator.js';\nimport styled from 'styled-components';\nimport {Button} from './StyledElements.js';\n\nfunction RegisterBase ({className, setLogin, setToken, setTaskState}) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    return (\n        <div className={className}>\n            <Button type='button' onClick={()=>setLogin()}>Log in with an existing account</Button>\n            <p>Register</p>\n            <p>Username</p>\n            <input onChange={e => setUsername(e.target.value)}/>\n            <p>Password</p>\n            <input onChange={e => setPassword(e.target.value)}/>\n            <Button type='button' onClick={() => {\n                fetch('https://duit-api.herokuapp.com/auth/register', {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({username: username, password: password})\n                })\n                .then(res => res.json())\n                .then(data => {\n                    setToken(data.token);\n                    return data.token;\n                })\n                .then(token => fetch(`https://duit-api.herokuapp.com/update/tasks?token=${token}`))\n                .then(res => res.json())\n                .then(data => setTaskState(makeTasksObject(data)))\n            }}>\n                Register\n            </Button>\n        </div>\n    );\n}\n\nconst Register = styled(RegisterBase)`\n    display: flex;\n    flex-direction: column;\n    padding: 6px 12px 7px 12px;\n    align-items: baseline;\n`;\nexport default Register;","import React, {useState} from 'react';\nimport {makeTasksObject} from './ObjectCreator.js';\nimport styled from 'styled-components';\nimport {Button, Button2, Input} from './StyledElements.js';\n\nfunction LoginBase({className, setLogin, setToken, setTaskState}) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    return (\n        <div className={className}>\n            <Button2 onClick={()=>setLogin()}>Create an account</Button2>\n            <p>Login</p>\n            <p>Username</p>\n            <Input onChange={e => setUsername(e.target.value)}/>\n            <p>Password</p>\n            <Input onChange={e => setPassword(e.target.value)}/>\n            <Button type='button' onClick={() => {\n                fetch(`https://duit-api.herokuapp.com/auth/login?username=${username}&password=${password}`)\n                .then(res => {\n                    if (res.status!=401){\n                        return res.json()\n                    }\n                    else {\n                        alert('Incorrect credentials');\n                        return {token: ''};\n                    }\n                })\n                .then(data => {\n                    setToken(data.token);\n                    return data.token;\n                })\n                .then(token => fetch(`https://duit-api.herokuapp.com/update/tasks?token=${token}`))\n                .then(res => res.json())\n                .then(data => setTaskState(makeTasksObject(data)))\n            }}>\n                Log in\n            </Button>\n        </div>\n    );\n}\n\nconst Login = styled(LoginBase)`\n    display: flex;\n    flex-direction: column;\n    padding: 6px 12px 7px 12px;\n    align-items: baseline;\n`;\n\nexport default Login;","import React, {useState, useEffect} from 'react';\nimport {makeTasksObject} from './ObjectCreator.js';\nimport styled from 'styled-components';\n\nfunction GoogleSignInBase ({setToken, setTaskState}) {\n    \n    function onSignIn(googleUser) {\n        var id_token = googleUser.getAuthResponse().id_token;\n        // send Google ID token to server, get response and set token (same format as login request in Login.js)\n        fetch('https://duit-api.herokuapp.com/auth/login-google', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({token: id_token})\n        })\n        .then(res => res.json())\n        .then(data => {\n            setToken(data.token);\n            return data.token;\n        })\n        .then(token => fetch(`https://duit-api.herokuapp.com/update/tasks?token=${token}`))\n        .then(res => res.json())\n        .then(data => setTaskState(makeTasksObject(data)))\n    }\n\n    \n    useEffect(() => {\n        window.gapi.signin2.render('g-signin2', {\n          'scope': 'https://www.googleapis.com/auth/plus.login',\n          'width': 120,\n          'height': 36,\n          'longtitle': false,\n          'theme': 'light',\n          'onsuccess': onSignIn\n        })\n      })\n    return (\n        <div>\n        <div id=\"g-signin2\" data-onsuccess={onSignIn}></div>\n        </div>\n    );\n}\n\nconst GoogleSignIn = styled(GoogleSignInBase)`\n`;\n\nexport default GoogleSignIn;","//Show \"Hello, ___\" instead of login/register when logged in\nimport React, {useState} from 'react';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport GoogleSignIn from './GoogleSignIn.js';\nimport styled from 'styled-components';\n\n\nfunction LoginPageBase({className, setTokenState, setTasksState}) {\n    const [showLogin, setShowLogin] = useState(true);\n    return (\n        <div className={className}>\n            {showLogin ? <Login \n                setLogin={() => setShowLogin(false)} \n                setToken={setTokenState} \n                setTaskState={setTasksState}\n                /> \n                : \n                <Register \n                setLogin={() => setShowLogin(true)}\n                setToken={setTokenState} \n                setTaskState={setTasksState}\n            />}\n            <GoogleSignIn \n                setToken={setTokenState} \n                setTaskState={setTasksState}\n            />\n        </div>\n    );\n}\n\nconst LoginPage = styled(LoginPageBase)`\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content:center;\n`;\n\nexport default LoginPage;","// This component creates a new task object and passes it into a helper function./\nimport React, {useState} from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {makeTasksObject} from './ObjectCreator.js';\nimport styled from 'styled-components';\nimport {Button} from './StyledElements.js';\n\nfunction getFormattedDate(date) {\n    return '' + date.getFullYear()+'/'+(date.getMonth() > 8 ? ''+(date.getMonth()+1): '0'+(date.getMonth()+1))+'/'+(date.getDate() > 9 ? ''+date.getDate(): '0'+date.getDate())\n}\n\nfunction AddTaskBase({className, roundTime, setTasksState, token}) {\n    const [startDate, setStartDate] = useState(new Date());\n    const [dueDate, setDueDate] = useState(new Date());\n    const [name, setName] = useState('');\n    const [totalTime, setTotalTime] = useState(0);\n    const [description, setDescription] = useState('');\n    const [prio, setPrio] = useState(0);\n    \n    \n    return (\n        <div className={className}>\n            <p>Add new task</p>\n            <input onChange={e => setName(e.target.value)}/>\n            <input onChange={e => setDescription(e.target.value)}/>\n            <input type='number' onChange={e => setTotalTime(parseInt(e.target.value))}/>\n            <input type='number' onChange={e=> setPrio(parseInt(e.target.value))}/>\n            <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n            <DatePicker selected={dueDate} onChange={(date)=>setDueDate(date)} />\n            <Button \n                type='button' \n                onClick={() => {\n                    let timestamp = Date.now();\n                    let formattedStartDate = getFormattedDate(startDate);\n                    let formattedDueDate = getFormattedDate(dueDate);\n                    fetch(`https://duit-api.herokuapp.com/update/addtask?token=${token}`, {\n                        method: 'POST',\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            time:Math.ceil(totalTime/roundTime)*roundTime,\n                            remainingTime: Math.ceil(totalTime/roundTime)*roundTime,\n                            title:name, \n                            desc:description, \n                            priority: prio,\n                            startDate: formattedStartDate,\n                            dueDate: formattedDueDate,\n                            taskId: timestamp\n                        })\n                    })\n                    .then(res => res.json())\n                    .then(data => setTasksState(makeTasksObject(data)));\n                    //else alert('Start date must be the same day or earlier than the due date.');\n                    // removed this line because do not want setstate in conditional \n                }\n                }\n            >\n                Add Task\n            </Button>\n        </div>\n    )\n}\n\nconst AddTask = styled(AddTaskBase)`\n\n`;\n\nexport {getFormattedDate};\nexport default AddTask;","// Task should have estimated time to completion / target time that user wants to work on task\n// Task can be marked with no due date, app will suggest times to work on it when there is a \"free\" day\nfunction Task({timeToComplete, dueDate, title, desc, priority, onClick, taskId}) {\n    // Need checkbox in this component\n    return (\n        <div onClick = {onClick}>\n            <table>\n                <tr>\n                    <th>{title}</th>\n                    <td>{timeToComplete} min</td>\n                </tr>\n            </table>\n        </div>\n    );\n}\nexport default Task;","// Given a date and an array of tasks for that date, return a disaply for a \n// section of tasks for that day\nimport Task from './Task.js';\nimport {makeTasksObject} from './ObjectCreator.js';\n\nfunction DayTasks({date, tasks, completedState, setTasksState, setCompletedState, token}) {\n    return (\n        <div>\n        <div>{date}</div>\n        {tasks.map(\n            task => <Task \n            timeToComplete={task.time} \n            dueDate={date} \n            title={task.title} \n            desc={task.desc} \n            priority={task.priority} \n            onClick={()=>{\n\n                fetch(`https://duit-api.herokuapp.com/update/deltask?token=${token}`, {\n                    method: 'PUT',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        taskId: task.taskId\n                    })\n                })\n                .then(res => res.json())\n                .then(data => setTasksState(makeTasksObject(data)));\n                // fetch and set completed state\n            }} \n            key={task.taskId} \n            taskId={task.taskId}\n            />\n            )}\n        </div>\n    )\n}\n\nexport default DayTasks;","import React, {useState} from 'react';\nimport ScheduleDayTasks from './DayTasks.js';\nimport {getFormattedDate} from './AddTask.js';\nimport {Button} from './StyledElements.js';\n\nfunction convertStringToDate(date) {\n    return new Date(date.substring(5,7)+'/'+date.substring(8,10)+'/'+date.substring(0,4));\n}\n\nfunction dayDiff(startDate, endDate) {\n    let date1 = convertStringToDate(startDate);\n    let date2 = convertStringToDate(endDate);\n    return Math.ceil(Math.abs(date2 - date1) / (1000 * 60 * 60 * 24)); \n}\nfunction compressSchedule(schedule) {\n/**\n * Given a schedule Map, return a Map with identical task objects combined into a single object with combined times.\n */\n    let copy = new Map();\n    for (let [date, dateTasks] of schedule) {\n        if (dateTasks.length > 0) {\n            let taskTimes= new Map();\n            for (let task of dateTasks) {\n                if (taskTimes.has(task.taskId)) taskTimes.set(task.taskId, [task, taskTimes.get(task.taskId)[1]+task.time]);\n                else taskTimes.set(task.taskId, [task, task.time]);\n            }\n            let newDateTasks = [];\n            for (let [taskId, totalTime] of taskTimes) {\n                let newTask = {...totalTime[0]};\n                newTask['time'] = totalTime[1];\n                newDateTasks.push(newTask);\n            }\n            copy.set(date, newDateTasks);\n        }\n        \n\n    }\n    return copy;\n}\n\nfunction generateSchedule(tasks, roundTime) {\n    /**\n     * Given a Map with dates as keys and arrays of task objects as values, return a Map of the same type with the tasks redistributed.\n     */\n    if (tasks.size > 0) {\n        let buckets = new Map();\n        let taskItems = [];\n        let tasksPerBucket = new Map();\n        let bucketsPerTask = new Map();\n        let minDate;\n        let maxDate;\n        for (let [date, dateTasks] of tasks) {\n            for (let task of dateTasks) {\n                let availableBuckets = dayDiff(task.startDate, task.dueDate)+1\n                bucketsPerTask.set(task.taskId, availableBuckets);\n                if (minDate==undefined || minDate > task.startDate) minDate = task.startDate;\n                if (maxDate==undefined || maxDate <task.dueDate) maxDate = task.dueDate;\n                \n                for (let i = 0; i < availableBuckets; i++) {\n                    let bucket = convertStringToDate(task.startDate);\n                    bucket.setDate(bucket.getDate()+i);\n                    bucket = getFormattedDate(bucket);\n                    if (tasksPerBucket.has(bucket)) tasksPerBucket.set(bucket, tasksPerBucket.get(bucket)+Math.round(task.time/roundTime));\n                    else tasksPerBucket.set(bucket, Math.round(task.time/roundTime));\n                }\n                for (let i = 0; i < Math.round(task.time/roundTime);i++) {\n                    let newTask = {...task};\n                    newTask['time'] = roundTime;\n                    delete newTask.onClick;\n                    taskItems.push(newTask);\n                }\n            }\n        }\n        let totalBuckets = dayDiff(minDate, maxDate)+1\n        for (let i = 0; i < totalBuckets; i++) {\n            let bucket = convertStringToDate(minDate);\n            bucket.setDate(bucket.getDate()+i)\n            bucket = getFormattedDate(bucket);\n            buckets.set(bucket, [])\n        }\n        \n        taskItems.sort((first, second) => {return bucketsPerTask.get(first.taskId)>bucketsPerTask.get(second.taskId) ? 1 : -1});\n        tasksPerBucket = new Map([...tasksPerBucket.entries()].sort((first, second) => {return first[1]>second[1] ? 1: -1}));\n        let i = 0;\n        \n        while (taskItems.length>0) {\n            let bucket = convertStringToDate(minDate);\n            bucket.setDate(bucket.getDate()+i)\n            bucket = getFormattedDate(bucket);\n            if (tasksPerBucket.has(bucket) && tasksPerBucket.get(bucket)>0 ) {\n                for (let j = 0; j < taskItems.length; j++) {\n                    if (taskItems[j].startDate <= bucket && bucket <= taskItems[j].dueDate){\n                        buckets.get(bucket).push(taskItems[j]);\n                        taskItems.splice(j, 1);\n                        break;\n                    }\n                }\n                tasksPerBucket.set(bucket, tasksPerBucket.get(bucket)-1)\n            }\n            i = (i+1)%totalBuckets;\n        }\n        \n        let newSchedule = new Map();\n        for (let [date, dateTasks] of buckets) {\n            if (dateTasks.length > 0) newSchedule.set(date, dateTasks);\n        }\n        return compressSchedule(newSchedule);\n    }\n    else return new Map();\n}\n\nfunction Schedule({tasks, roundTime}) {\n    const [schedule, setSchedule] = useState(new Map());\n\n    let scheduleDates = [];\n    schedule.forEach((dateTasks, date) => scheduleDates.push(<ScheduleDayTasks date={date} tasks={dateTasks} key={'s'+date}/>))\n\n\n    return (\n        <div>\n            <Button onClick={() => setSchedule(generateSchedule(tasks, roundTime))}>\n                Generate new schedule\n            </Button>\n            {scheduleDates}\n        </div>\n    );\n}\n\nexport default Schedule;","import DayTasks from './DayTasks.js';\n\nfunction ToDoList({tasks, completedTasks, setTasks, setCompletedTasks, token}) {\n    let taskDates = [];\n    tasks.forEach((dateTasks, date) => taskDates.push(<DayTasks date={date} tasks={dateTasks} key={date} completedState={completedTasks} setTasksState={setTasks} setCompletedState={setCompletedTasks} token={token}/>))\n    return (\n    <div>\n        {taskDates}\n    </div>\n    );\n}\n\nexport default ToDoList;","import React, {useState, useEffect} from 'react';\nimport AddTask from './AddTask.js';\nimport Schedule from './Schedule.js';\nimport ToDoList from './ToDoList';\n\nfunction Main({tasks, setTasks, minTime, completedTasks, setCompletedTasks, reminders, setReminders, token, setToken}) {\n    return (\n        <div>\n            <AddTask \n                roundTime={minTime} \n                setTasksState={setTasks} \n                token={token}\n            />\n            <ToDoList \n                tasks={tasks}\n                completedTasks={completedTasks}\n                setTasks={setTasks}\n                setCompletedTasks={setCompletedTasks}\n                token={token}\n            />\n            <Schedule tasks={tasks} roundTime={minTime}/>\n        </div>\n    );\n}\n\nexport default Main;","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport LoginPage from './LoginPage';\nimport { ThemeProvider } from 'styled-components';\nimport {GlobalStyle, theme} from './StyledElements';\nimport Main from './Main.js';\nimport styled from 'styled-components';\nfunction AppBase() {\n  const [tasks, setTasks] = useState(new Map());\n  const [minTime, setMinTime] = useState(30);\n  const [completedTasks, setCompletedTasks] = useState(new Map());\n  const [reminders, setReminders] = useState([]);\n  const [token, setToken] = useState('');\n\n  useEffect(() => document.title = \"Duit\");\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n      <GlobalStyle/>\n      {token==='' ? \n        <LoginPage setTokenState = {setToken} setTasksState = {setTasks}/>\n        :\n        <Main \n        tasks={tasks} \n        setTasks={setTasks} \n        minTime={minTime} \n        completedTasks={completedTasks} \n        setCompletedTasks={setCompletedTasks} \n        reminders={reminders} \n        setReminders={setReminders}\n        token={token}\n        setToken={setToken}\n        />      \n      }\n      \n      \n      \n      </ThemeProvider>\n    </div>\n  );\n}\nconst App = styled(AppBase)`\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}