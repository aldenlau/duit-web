{"version":3,"sources":["StyledElements.js","Register.js","Login.js","ObjectCreator.js","GoogleSignIn.js","logo.png","LoginPage.js","Task.js","DayTasks.js","AddTask.js","Schedule.js","ToDoList.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["theme","main","second","fontFamily","Button","styled","button","props","Button2","Input","input","GlobalStyle","createGlobalStyle","Register","className","setLogin","setToken","setTaskState","useState","username","setUsername","password","setPassword","type","onClick","onChange","e","target","value","fetch","method","headers","body","JSON","stringify","then","res","json","data","token","Login","status","alert","makeTasksObject","rawTasks","tasks","Map","rawTask","task","time","remainingTime","remaining_time","title","desc","description","priority","startDate","start_date","dueDate","due_date","taskId","task_id","has","get","push","set","entries","sort","GoogleSignIn","onSignIn","googleUser","id_token","getAuthResponse","useEffect","window","gapi","signin2","render","id","LoginPage","setTokenState","setTasksState","showLogin","setShowLogin","src","logo","width","height","style","margin","Task","timeToComplete","DayTasks","date","completedState","setCompletedState","map","getFormattedDate","getFullYear","getMonth","getDate","AddTask","minTime","Date","setStartDate","setDueDate","name","setName","totalTime","setTotalTime","setDescription","prio","setPrio","parseInt","selected","timestamp","now","formattedStartDate","formattedDueDate","Math","ceil","convertStringToDate","substring","dayDiff","endDate","date1","date2","abs","generateSchedule","roundTime","size","minDate","maxDate","buckets","taskItems","tasksPerBucket","bucketsPerTask","dateTasks","availableBuckets","undefined","i","bucket","setDate","round","newTask","totalBuckets","first","length","j","splice","newSchedule","schedule","copy","taskTimes","newDateTasks","compressSchedule","Schedule","setSchedule","scheduleDates","forEach","ToDoList","completedTasks","setTasks","setCompletedTasks","taskDates","Main","reminders","setReminders","App","document","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e040935.chunk.js","sourcesContent":["import styled, {createGlobalStyle} from 'styled-components';\n// Arvo or Merriweather\nconst theme = {\n    main: '#00a2ff',\n    second: '#69c8ff',\n    fontFamily: 'Merriweather',\n};\n\nconst Button = styled.button`\n    background-color: ${props => props.theme.main};\n    color: #fff;\n    border: 1px solid transparent;\n    margin-right: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 35px;\n    font-weight: bold;\n    font-size: 12px;\n    padding: 6px 12px 7px 12px;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n    font-family: ${props => props.theme.fontFamily};\n`;\n\nconst Button2 = styled.button`\n    background-color: ${props => props.theme.second};\n    color: #fff;\n    border: 1px solid transparent;\n    margin-right: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 28px;\n    font-weight: bold;\n    font-size: 12px;\n    padding: 6px 12px 7px 12px;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n    font-family: ${props => props.theme.fontFamily};\n`;\n\nconst Input = styled.input`\n    border: hidden;\n    background-color: #f2f2f2;\n    border-radius: 5px;\n    height: 25px;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        font-family: ${props => props.theme.fontFamily};\n    }\n`;\n\nexport {Button, Button2, Input, GlobalStyle, theme};","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {Button, Button2, Input} from './StyledElements.js';\n\nfunction RegisterBase ({className, setLogin, setToken, setTaskState}) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    return (\n        <div className={className}>\n            <Button2 type='button' onClick={()=>setLogin()}>Log in with an existing account</Button2>\n            <p>Register</p>\n            <p>Username</p>\n            <Input onChange={e => setUsername(e.target.value)}/>\n            <p>Password</p>\n            <Input onChange={e => setPassword(e.target.value)}/>\n            <Button type='button' onClick={() => {\n                fetch('https://duit-api.herokuapp.com/auth/register', {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({username: username, password: password})\n                })\n                .then(res => res.json())\n                .then(data => {\n                    setToken(data.token);\n                });\n            }}>\n                Register\n            </Button>\n        </div>\n    );\n}\n\nconst Register = styled(RegisterBase)`\n    display: flex;\n    flex-direction: column;\n    padding: 6px 12px 7px 12px;\n    align-items:center;\n`;\nexport default Register;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {Button, Button2, Input} from './StyledElements.js';\n\nfunction LoginBase({className, setLogin, setToken, setTaskState}) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    return (\n        <div className={className}>\n            <Button2 onClick={()=>setLogin()}>Create an account</Button2>\n            <p>Login</p>\n            <p>Username</p>\n            <Input onChange={e => setUsername(e.target.value)}/>\n            <p>Password</p>\n            <Input onChange={e => setPassword(e.target.value)}/>\n            <Button type='button' onClick={() => {\n                fetch(`https://duit-api.herokuapp.com/auth/login?username=${username}&password=${password}`)\n                .then(res => {\n                    if (res.status!==401){\n                        return res.json()\n                    }\n                    else {\n                        alert('Incorrect credentials');\n                        return {token: ''};\n                    }\n                })\n                .then(data => {\n                    setToken(data.token);\n                });\n            }}>\n                Log in\n            </Button>\n        </div>\n    );\n}\n\nconst Login = styled(LoginBase)`\n    display: flex;\n    flex-direction: column;\n    padding: 6px 12px 7px 12px;\n    align-items:center;\n`;\n\nexport default Login;","function makeTasksObject(rawTasks) {\n  /**\n   * Given an array of tasks, make a tasks object for setState.\n   */\n  let tasks = new Map();\n  for (let rawTask of rawTasks) {\n    let task = {\n      time: rawTask.time,\n      remainingTime: rawTask.remaining_time,\n      title: rawTask.title,\n      desc: rawTask.description,\n      priority: rawTask.priority,\n      startDate: rawTask.start_date,\n      dueDate: rawTask.due_date,\n      taskId: rawTask.task_id\n    };\n\n    if (tasks.has(rawTask.due_date)) {\n      tasks.get(rawTask.due_date).push(task);\n    }\n    else {\n      tasks.set(rawTask.due_date, [task])\n    }\n  }\n  tasks = new Map([...tasks.entries()].sort())\n  return tasks;\n}\n\nexport {makeTasksObject};","import React, {useEffect} from 'react';\nimport {makeTasksObject} from './ObjectCreator.js';\nimport styled from 'styled-components';\n\nfunction GoogleSignInBase ({setToken, setTaskState}) {\n    \n    function onSignIn(googleUser) {\n        var id_token = googleUser.getAuthResponse().id_token;\n        // send Google ID token to server, get response and set token (same format as login request in Login.js)\n        fetch('https://duit-api.herokuapp.com/auth/login-google', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({token: id_token})\n        })\n        .then(res => res.json())\n        .then(data => {\n            setToken(data.token);\n            return data.token;\n        })\n        .then(token => fetch(`https://duit-api.herokuapp.com/update/tasks?token=${token}`))\n        .then(res => res.json())\n        .then(data => setTaskState(makeTasksObject(data)))\n    }\n\n    \n    useEffect(() => {\n        window.gapi.signin2.render('g-signin2', {\n          'scope': 'https://www.googleapis.com/auth/plus.login',\n          'width': 120,\n          'height': 36,\n          'longtitle': false,\n          'theme': 'light',\n          'onsuccess': onSignIn\n        })\n    });\n    return (\n        <div>\n        <div id=\"g-signin2\" data-onsuccess={onSignIn}></div>\n        </div>\n    );\n}\n\nconst GoogleSignIn = styled(GoogleSignInBase)`\n`;\n\nexport default GoogleSignIn;","export default __webpack_public_path__ + \"static/media/logo.994c7676.png\";","//Show \"Hello, ___\" instead of login/register when logged in\nimport React, {useState} from 'react';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport GoogleSignIn from './GoogleSignIn.js';\nimport styled from 'styled-components';\nimport logo from './logo.png'\n\nfunction LoginPageBase({className, setTokenState, setTasksState}) {\n    const [showLogin, setShowLogin] = useState(true);\n    return (\n        <div className={className}>\n            <img src={logo} width=\"20%\" height=\"20%\" style={{margin: \"10px\"}}></img>\n            <GoogleSignIn \n                setToken={setTokenState} \n                setTaskState={setTasksState}\n            />\n            {showLogin ? \n                <Login \n                setLogin={() => setShowLogin(false)} \n                setToken={setTokenState} \n                setTaskState={setTasksState}\n                /> \n                : \n                <Register \n                setLogin={() => setShowLogin(true)}\n                setToken={setTokenState} \n                setTaskState={setTasksState}\n                />\n            }\n            \n        </div>\n    );\n}\n\nconst LoginPage = styled(LoginPageBase)`\n    margin: 5% auto auto auto;\n    padding: 20px;\n    width: 250px;\n    display: flex;\n    flex-direction: column;\n    align-items:center;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n`;\n\nexport default LoginPage;","// Task should have estimated time to completion / target time that user wants to work on task\n// Task can be marked with no due date, app will suggest times to work on it when there is a \"free\" day\nfunction Task({timeToComplete, dueDate, title, desc, priority, onClick, taskId}) {\n    // Need checkbox in this component\n    return (\n        <div onClick = {onClick}>\n            <table>\n                <tr>\n                    <th>{title}</th>\n                    <td>{timeToComplete} min</td>\n                </tr>\n            </table>\n        </div>\n    );\n}\nexport default Task;","// Given a date and an array of tasks for that date, return a disaply for a \n// section of tasks for that day\nimport Task from './Task.js';\nimport {makeTasksObject} from './ObjectCreator.js';\nimport styled from 'styled-components';\nfunction DayTasksBase({date, tasks, completedState, setTasksState, setCompletedState, token}) {\n    return (\n        <div>\n        <div>{date}</div>\n        {tasks.map(\n            task => <Task \n            timeToComplete={task.time} \n            dueDate={date} \n            title={task.title} \n            desc={task.desc} \n            priority={task.priority} \n            onClick={()=>{\n\n                fetch(`https://duit-api.herokuapp.com/update/deltask?token=${token}`, {\n                    method: 'PUT',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        taskId: task.taskId\n                    })\n                })\n                .then(res => res.json())\n                .then(data => setTasksState(makeTasksObject(data)));\n                // fetch and set completed state\n            }} \n            key={task.taskId} \n            taskId={task.taskId}\n            />\n            )}\n        </div>\n    )\n}\n\nconst DayTasks = styled(DayTasksBase)`\n    \n`;\n\nexport default DayTasks;","// This component creates a new task object and passes it into a helper function./\nimport React, {useState} from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {makeTasksObject} from './ObjectCreator.js';\nimport styled from 'styled-components';\nimport {Button, Input} from './StyledElements.js';\n\nfunction getFormattedDate(date) {\n    return '' + date.getFullYear()+'/'+(date.getMonth() > 8 ? ''+(date.getMonth()+1): '0'+(date.getMonth()+1))+'/'+(date.getDate() > 9 ? ''+date.getDate(): '0'+date.getDate())\n}\n\nfunction AddTaskBase({className, minTime, setTasksState, token}) {\n    const [startDate, setStartDate] = useState(new Date());\n    const [dueDate, setDueDate] = useState(new Date());\n    const [name, setName] = useState('');\n    const [totalTime, setTotalTime] = useState(0);\n    const [description, setDescription] = useState('');\n    const [prio, setPrio] = useState(0);\n    \n    \n    return (\n        <div className={className}>\n            <p>Add new task</p>\n            <Input onChange={e => setName(e.target.value)}/>\n            <Input onChange={e => setDescription(e.target.value)}/>\n            <Input type='number' onChange={e => setTotalTime(parseInt(e.target.value))}/>\n            <Input type='number' onChange={e=> setPrio(parseInt(e.target.value))}/>\n            <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n            <DatePicker selected={dueDate} onChange={(date)=>setDueDate(date)} />\n            <Button \n                type='button' \n                onClick={() => {\n                    let timestamp = Date.now();\n                    let formattedStartDate = getFormattedDate(startDate);\n                    let formattedDueDate = getFormattedDate(dueDate);\n                    fetch(`https://duit-api.herokuapp.com/update/addtask?token=${token}`, {\n                        method: 'POST',\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            time:Math.ceil(totalTime/minTime)*minTime,\n                            remainingTime: Math.ceil(totalTime/minTime)*minTime,\n                            title:name, \n                            desc:description, \n                            priority: prio,\n                            startDate: formattedStartDate,\n                            dueDate: formattedDueDate,\n                            taskId: timestamp\n                        })\n                    })\n                    .then(res => res.json())\n                    .then(data => setTasksState(makeTasksObject(data)));\n                    //else alert('Start date must be the same day or earlier than the due date.');\n                    // removed this line because do not want setstate in conditional \n                }\n                }\n            >\n                Add Task\n            </Button>\n        </div>\n    )\n}\n\nconst AddTask = styled(AddTaskBase)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport {getFormattedDate};\nexport default AddTask;","import React, {useState} from 'react';\nimport ScheduleDayTasks from './DayTasks.js';\nimport {getFormattedDate} from './AddTask.js';\nimport {Button} from './StyledElements.js';\n\nfunction convertStringToDate(date) {\n    return new Date(date.substring(5,7)+'/'+date.substring(8,10)+'/'+date.substring(0,4));\n}\n\nfunction dayDiff(startDate, endDate) {\n    let date1 = convertStringToDate(startDate);\n    let date2 = convertStringToDate(endDate);\n    return Math.ceil(Math.abs(date2 - date1) / (1000 * 60 * 60 * 24)); \n}\nfunction compressSchedule(schedule) {\n/**\n * Given a schedule Map, return a Map with identical task objects combined into a single object with combined times.\n */\n    let copy = new Map();\n    for (let [date, dateTasks] of schedule) {\n        if (dateTasks.length > 0) {\n            let taskTimes= new Map();\n            for (let task of dateTasks) {\n                if (taskTimes.has(task.taskId)) taskTimes.set(task.taskId, [task, taskTimes.get(task.taskId)[1]+task.time]);\n                else taskTimes.set(task.taskId, [task, task.time]);\n            }\n            let newDateTasks = [];\n            for (let [taskId, totalTime] of taskTimes) {\n                let newTask = {...totalTime[0]};\n                newTask['time'] = totalTime[1];\n                newDateTasks.push(newTask);\n            }\n            copy.set(date, newDateTasks);\n        }\n        \n\n    }\n    return copy;\n}\n\nfunction generateSchedule(tasks, roundTime) {\n    /**\n     * Given a Map with dates as keys and arrays of task objects as values, return a Map of the same type with the tasks redistributed.\n     */\n    if (tasks.size > 0) {\n        let buckets = new Map();\n        let taskItems = [];\n        let tasksPerBucket = new Map();\n        let bucketsPerTask = new Map();\n        let minDate;\n        let maxDate;\n        for (let [date, dateTasks] of tasks) {\n            for (let task of dateTasks) {\n                let availableBuckets = dayDiff(task.startDate, task.dueDate)+1\n                bucketsPerTask.set(task.taskId, availableBuckets);\n                if (minDate===undefined || minDate > task.startDate) minDate = task.startDate;\n                if (maxDate===undefined || maxDate <task.dueDate) maxDate = task.dueDate;\n                \n                for (let i = 0; i < availableBuckets; i++) {\n                    let bucket = convertStringToDate(task.startDate);\n                    bucket.setDate(bucket.getDate()+i);\n                    bucket = getFormattedDate(bucket);\n                    if (tasksPerBucket.has(bucket)) tasksPerBucket.set(bucket, tasksPerBucket.get(bucket)+Math.round(task.time/roundTime));\n                    else tasksPerBucket.set(bucket, Math.round(task.time/roundTime));\n                }\n                for (let i = 0; i < Math.round(task.time/roundTime);i++) {\n                    let newTask = {...task};\n                    newTask['time'] = roundTime;\n                    delete newTask.onClick;\n                    taskItems.push(newTask);\n                }\n            }\n        }\n        let totalBuckets = dayDiff(minDate, maxDate)+1\n        for (let i = 0; i < totalBuckets; i++) {\n            let bucket = convertStringToDate(minDate);\n            bucket.setDate(bucket.getDate()+i)\n            bucket = getFormattedDate(bucket);\n            buckets.set(bucket, [])\n        }\n        \n        taskItems.sort((first, second) => {return bucketsPerTask.get(first.taskId)>bucketsPerTask.get(second.taskId) ? 1 : -1});\n        tasksPerBucket = new Map([...tasksPerBucket.entries()].sort((first, second) => {return first[1]>second[1] ? 1: -1}));\n        let i = 0;\n        \n        while (taskItems.length>0) {\n            let bucket = convertStringToDate(minDate);\n            bucket.setDate(bucket.getDate()+i)\n            bucket = getFormattedDate(bucket);\n            if (tasksPerBucket.has(bucket) && tasksPerBucket.get(bucket)>0 ) {\n                for (let j = 0; j < taskItems.length; j++) {\n                    if (taskItems[j].startDate <= bucket && bucket <= taskItems[j].dueDate){\n                        buckets.get(bucket).push(taskItems[j]);\n                        taskItems.splice(j, 1);\n                        break;\n                    }\n                }\n                tasksPerBucket.set(bucket, tasksPerBucket.get(bucket)-1)\n            }\n            i = (i+1)%totalBuckets;\n        }\n        \n        let newSchedule = new Map();\n        for (let [date, dateTasks] of buckets) {\n            if (dateTasks.length > 0) newSchedule.set(date, dateTasks);\n        }\n        return compressSchedule(newSchedule);\n    }\n    else return new Map();\n}\n\nfunction Schedule({tasks, roundTime}) {\n    const [schedule, setSchedule] = useState(new Map());\n\n    let scheduleDates = [];\n    schedule.forEach((dateTasks, date) => scheduleDates.push(<ScheduleDayTasks date={date} tasks={dateTasks} key={'s'+date}/>))\n\n\n    return (\n        <div>\n            <Button onClick={() => setSchedule(generateSchedule(tasks, roundTime))}>\n                Generate new schedule\n            </Button>\n            {scheduleDates}\n        </div>\n    );\n}\n\nexport default Schedule;","// Add filters for to-do list and schedule\n\nimport DayTasks from './DayTasks.js';\nimport AddTask from './AddTask.js';\nimport styled from 'styled-components';\n\nfunction ToDoListBase({tasks, completedTasks, setTasks, setCompletedTasks, token, minTime, className}) {\n    let taskDates = [];\n    tasks.forEach((dateTasks, date) => taskDates.push(<DayTasks date={date} tasks={dateTasks} key={date} completedState={completedTasks} setTasksState={setTasks} setCompletedState={setCompletedTasks} token={token}/>))\n    return (\n    <div className={className}>\n        <AddTask \n            minTime={minTime} \n            setTasksState={setTasks} \n            token={token}\n        />\n        {taskDates}\n    </div>\n    );\n}\n\nconst ToDoList = styled(ToDoListBase)`\n    width: 33%;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport default ToDoList;","import React, {useState, useEffect} from 'react';\nimport {makeTasksObject} from './ObjectCreator.js';\nimport Schedule from './Schedule.js';\nimport ToDoList from './ToDoList';\nimport styled from 'styled-components';\n\nfunction MainBase({tasks, setTasks, minTime, completedTasks, setCompletedTasks, reminders, setReminders, token, setToken, className}) {\n    \n    useEffect(() => {\n        fetch(`https://duit-api.herokuapp.com/update/tasks?token=${token}`)\n        .then(res => res.json())\n        .then(data => setTasks(makeTasksObject(data)))\n    }, [token, setTasks]);\n\n    return (\n        <div className={className}>\n            \n            <ToDoList \n                tasks={tasks}\n                completedTasks={completedTasks}\n                setTasks={setTasks}\n                setCompletedTasks={setCompletedTasks}\n                token={token}\n                minTime={minTime} \n            />\n            <Schedule tasks={tasks} roundTime={minTime}/>\n        </div>\n    );\n}\n\nconst Main = styled(MainBase)`\n    display: flex;\n    flex-direction: row;\n    margin: 5px;\n`;\nexport default Main;","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport LoginPage from './LoginPage';\nimport { ThemeProvider } from 'styled-components';\nimport {GlobalStyle, theme} from './StyledElements';\nimport Main from './Main.js';\nimport styled from 'styled-components';\n\n\nfunction AppBase() {\n  const [tasks, setTasks] = useState(new Map());\n  const [minTime, setMinTime] = useState(30);\n  const [completedTasks, setCompletedTasks] = useState(new Map());\n  const [reminders, setReminders] = useState([]);\n  const [token, setToken] = useState('');\n\n  useEffect(() => document.title = \"Duit\");\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n      <GlobalStyle/>\n      \n      {token==='' ? \n        <LoginPage setTokenState = {setToken} setTasksState = {setTasks}/>\n        :\n        <Main \n        tasks={tasks} \n        setTasks={setTasks} \n        minTime={minTime} \n        completedTasks={completedTasks} \n        setCompletedTasks={setCompletedTasks} \n        reminders={reminders} \n        setReminders={setReminders}\n        token={token}\n        setToken={setToken}\n        />      \n      }\n      \n      \n      \n      </ThemeProvider>\n    </div>\n  );\n}\nconst App = styled(AppBase)`\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}